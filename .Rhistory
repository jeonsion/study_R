play <- c("0","0","0","0","0","0","0","0","0","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r1 <- sum(result == 1) / length(result)
r1
play <- c("0","0","0","0","0","0","0","0","1","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r2 <- sum(result == 1) / length(result)
r2
play <- c("0","0","0","0","0","0","0","1","1","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r3 <- sum(result == 1) / length(result)
r3
play <- c("0","0","0","0","0","0","1","1","1","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r4 <- sum(result == 1) / length(result)
r4
play <- c("0","0","0","0","0","1","1","1","1","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r5 <- sum(result == 1) / length(result)
r5
probabilityofmo = c(r1,r2,r3,r4,r5)
plot(probabilityofmo, type = "l")
play <- c("0","0","0","0","0","0","0","0","0","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r1 <- sum(result == 1) / length(result)
r1
play <- c("0","0","0","0","0","0","0","0","1","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r2 <- sum(result == 1) / length(result)
r2
play <- c("0","0","0","0","0","0","0","1","1","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r3 <- sum(result == 1) / length(result)
r3
play <- c("0","0","0","0","0","0","1","1","1","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r4 <- sum(result == 1) / length(result)
r4
play <- c("0","0","0","0","0","1","1","1","1","1")
result <- c()
for(i in 1:1000)
{
yut1 <- sample(play, 1)
yut2 <- sample(play, 1)
yut3 <- sample(play, 1)
yut4 <- sample(play, 1)
if( (yut1 == 1) & (yut2 == 1) & (yut3 == 1) & (yut4 == 1)) {result <- c(result, 1) }
else {result <- c(result ,2) }
}
r5 <- sum(result == 1) / length(result)
r5
probabilityofmo = c(r1,r2,r3,r4,r5)
plot(probabilityofmo, type = "l", xlab = "individual provavility")
install.packages("animation")
library(animation)
ani.options*nmax = 1000, interval = 0.01)
win.graph(7,4)
lln.ani(FUN=function(n,mu) rbinom(n, size = 1, prob = mu), mu=0.4, type="n", col.poly = "blue")
title(main = "윷가락을 1회~1000회 던졌을 때 윷가락 등의 상대도수변화화 ")
install.packages("animation")
library(animation)
ani.options(nmax = 1000, interval = 0.01)
win.graph(7,4)
lln.ani(FUN=function(n,mu) rbinom(n, size = 1, prob = mu), mu=0.4, type="n", col.poly = "blue")
install.packages("animation")
library(animation)
ani.options(nmax = 1000, interval = 0.01)
win.graph(7,4)
lln.ani(FUN=function(n,mu) rbinom(n, size = 1, prob = mu), mu=0.4, type="n", col.poly = "blue")
title(main = "윷가락을 1회~1000회 던졌을 때 윷가락 등의 상대도수변화화 ")
y = "blue")
title(main = "윷가락을 1회~1000회 던졌을 때 윷가락 등의 상대도수변화화 ")
title(main = "윷가락을 1회~1000회 던졌을 때 윷가락 등의 상대도수변화화 ")
library(prob)
(s<-tosscoin(3))
count <- function(x) sum(x=="H")
(Ac <- subset(s, apply(s, 1, count)==3))
(A<-setdiff(s, Ac))
cat("P(A )=1 - n(Ac)/n(s) = ", nrow(A), "/", nrwo(s), "\n")
library(prob)
(s<-tosscoin(3))
count <- function(x) sum(x=="H")
(Ac <- subset(s, apply(s, 1, count)==3))
(A<-setdiff(s, Ac))
cat("P(A )=1 - n(Ac)/n(s) = ", nrow(A), "/", nrow(s), "\n")
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
as.fractions(F[2])
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
as.fractions(F)
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
as.fractions(F[2])
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
as.fraction(F[2])
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
fractions(F[2])
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
fractions(F)
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
as.fractions(F)
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
(F)
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
as.fractions(F)
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
plost(f)
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
plot(f)
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
plot(F)
prior <-c(1/3, 1/4, 5/12)
cond <-c(1,2/3, 3/4*2/3)
(tot<-sum(prior*cond))
(F <-(prior*cond)/sum(tot))
fraction(F)
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:100000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:100000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:10000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:10000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c("switchwin", "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:10)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "switchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:10)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:10)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:100000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "switchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
if(pick ==door){results = c(results, "switchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
if(pick ==doors){results = c(results, "switchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==pink){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==doors){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick &doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick & doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
doors<-c("1", "2", "3")
results <-c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open <-sample(doors[which(doors != pick & doors != car)],1)
switchyes <-doors[which(doors!=pick & doors != open)]
if(pick ==car){results = c(results, "noswitchwin")}
}
sum(results =="switchwin")
sum(results == "noswitchwin")
sample(1:45, 6)
sample(1:45, 6)
sample(1:45, 6)
1/choose(45, 6)
doors <- c("1", "2", "3","4")
results <- c()
for(i in 1:1000)
{
car <-sample(doors, 1)
pick <-sample(doors, 1)
open<-sample(doors[which(doors != pick & doors != car)], 1)
extra <-sample(doors[which(doors != pick & doors != car & doors != open)], 1)
switch <-sample(doors[which(doors !=pick & doors != open & doors != extra)])
if(pick == car){results = c(results, 1)}
if(switch == car) { results = c(results, 2)}
}
sum(results ==1) / length(results)
sum(results ==2) / length(results)*0.5
